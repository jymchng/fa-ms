{
  "name": "backend",
  "version": "0.1.0",
  "description": "Backend for a Web App for Chart Visualization",
  "scripts": {
    "check": "tsc --noEmit -p ./tsconfig.build-dev.json && echo \"tsc checks passed!\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "prepare": "ts-patch install && typia patch && husky",
    "format": "prettier --write \"src/**/*.ts\" \"tests/**/*.ts\" build.ts",
    "clean": "rm -fr build-dev && rm -fr build-prod && rm -fr build && rm -fr node_modules",
    "setup": "npm run clean && npm install && typia setup --manager npm --project tsconfig.json",
    "nest:build": "nest build",
    "nest:start": "nest start",
    "nest:start-dev": "nest start --watch",
    "nest:start-debug": "nest start --debug --watch",
    "nest:start-prod": "node dist/main",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test": "jest --coverage",
    "copy:pre-commit": "cp pre-commit .husky/_/pre-commit && chmod ug+x .husky/**",
    "copy:files": "bash scripts/copyfiles.sh production",
    "copy:files-dev": "bash scripts/copyfiles.sh development",
    "build:dev": "rm -fr build-dev && bash scripts/npm-build.sh development",
    "build:lib": "tsup",
    "build:prod": "rm -fr build && bash scripts/npm-build.sh production",
    "build:all": "bash scripts/npm-build.sh",
    "watch:dev": "dotenv -e .env.development -e secrets/.db.development -- tsc-watch --onSuccess \"dotenv -e .env.development -e secrets/.db.development -- node build-dev/src/bin/main.js\"",
    "run:dev": "npm run build:dev && dotenv -e .env.development -e secrets/.db.development -- node build-dev/src/bin/main.js",
    "run:prod": "npm run build:prod && dotenv -e .env.production -e secrets/.db.production -- node build/src/bin/main.js",
    "docker:dev": "bash scripts/docker-run.sh development noclean",
    "docker:prod": "bash scripts/docker-run.sh production noclean",
    "docker:dev-clean": "bash scripts/docker-run.sh development clean",
    "docker:prod-clean": "bash scripts/docker-run.sh production clean",
    "docker:local": "docker compose --env-file .env.development --env-file secrets/.db.development -f docker-compose-dev.yaml down fa-ms-dev-database && docker compose --env-file .env.development --env-file secrets/.db.development -f docker-compose-dev.yaml up fa-ms-dev-database",
    "docker:local-clean": "docker compose --env-file .env.development --env-file secrets/.db.development -f docker-compose-dev.yaml down fa-ms-dev-database && docker system prune -af && docker compose --env-file .env.development --env-file secrets/.db.development -f docker-compose-dev.yaml up fa-ms-dev-database",
    "docker:all-down": "npm run docker-dev-down && npm run docker-prod-down",
    "docker:dev-down": "docker compose --env-file .env.development --env-file secrets/.db.development -f docker-compose-dev.yaml down",
    "docker:prod-down": "docker compose --env-file secrets/.db.production --env-file .env.production -f docker-compose-prod.yaml down",
    "prisma:prod-deploy": "dotenv -e .env.production -e secrets/.db.production -- npx prisma migrate deploy",
    "prisma:dev-create-only": "dotenv -e .env.development -e secrets/.db.development -- npx prisma migrate dev --create-only",
    "prisma:dev-migrate": "dotenv -e .env.development -e secrets/.db.development -- npx prisma migrate dev",
    "prisma:dev-reset": "dotenv -e .env.development -e secrets/.db.development -- npx prisma migrate reset",
    "prisma:generate": "npx prisma generate",
    "reinstall:self-deps": "npm uninstall jacob-bot-common && npm i git+ssh://git@github.com/mizu-labs/jacob-bot-common"
  },
  "bin": {
    "cli": "./src/bin/main.ts"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mizu-labs/backend.git"
  },
  "keywords": [
    "Template",
    "TypeScript",
    "GitHub"
  ],
  "author": "Jim Chng <jimchng@outlook.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mizu-labs/backend/issues"
  },
  "homepage": "https://github.com/mizu-labs/backend#readme",
  "devDependencies": {
    "@nestia/benchmark": "^0.2.3",
    "@nestia/sdk": "^3.8.1",
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.10.4",
    "@types/sanitize-html": "^2.9.5",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "dotenv": "^16.3.1",
    "dotenv-cli": "^7.3.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "husky": "^9.0.11",
    "jest": "^29.5.0",
    "nest-winston": "^1.9.4",
    "nestia": "^5.5.0",
    "prettier": "^3.0.0",
    "prisma": "^5.14.0",
    "rimraf": "^5.0.5",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "ts-patch": "^3.2.1",
    "tsc-watch": "^6.0.4",
    "tsconfig-paths": "^4.2.0",
    "tsup": "^8.0.2",
    "tsx": "^4.10.0",
    "typescript": "~5.6.3",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "main": "./dist/index.js",
  "module": "./dist/index.mjs",
  "types": "./dist/index.d.ts",
  "files": [
    "dist"
  ],
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.1.17",
    "@nestjs/throttler": "^5.0.1",
    "@prisma/client": "^5.7.0",
    "@types/bcrypt": "^5.0.2",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "jacob-bot-common": "github:mizu-labs/jacob-bot-common",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "sanitize-html": "^2.11.0",
    "typia": "^6.5.4",
    "winston": "^3.13.0"
  }
}
